
Lueftersteuerung_ATTINY85.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000032  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000009e  2**0
                  ALLOC, LOAD, DATA
  2 .comment      0000002f  00000000  00000000  0000009e  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000020  00000000  00000000  000000cd  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   000006a5  00000000  00000000  000000ed  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000433  00000000  00000000  00000792  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   0000018d  00000000  00000000  00000bc5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000024  00000000  00000000  00000d54  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000169  00000000  00000000  00000d78  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000010  00000000  00000000  00000ee1  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .text         00000002  00000048  00000048  0000009c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000ef4  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .text.main    00000016  00000032  00000032  00000086  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0e c0       	rjmp	.+28     	; 0x1e <__ctors_end>
   2:	22 c0       	rjmp	.+68     	; 0x48 <__bad_interrupt>
   4:	21 c0       	rjmp	.+66     	; 0x48 <__bad_interrupt>
   6:	20 c0       	rjmp	.+64     	; 0x48 <__bad_interrupt>
   8:	1f c0       	rjmp	.+62     	; 0x48 <__bad_interrupt>
   a:	1e c0       	rjmp	.+60     	; 0x48 <__bad_interrupt>
   c:	1d c0       	rjmp	.+58     	; 0x48 <__bad_interrupt>
   e:	1c c0       	rjmp	.+56     	; 0x48 <__bad_interrupt>
  10:	1b c0       	rjmp	.+54     	; 0x48 <__bad_interrupt>
  12:	1a c0       	rjmp	.+52     	; 0x48 <__bad_interrupt>
  14:	19 c0       	rjmp	.+50     	; 0x48 <__bad_interrupt>
  16:	18 c0       	rjmp	.+48     	; 0x48 <__bad_interrupt>
  18:	17 c0       	rjmp	.+46     	; 0x48 <__bad_interrupt>
  1a:	16 c0       	rjmp	.+44     	; 0x48 <__bad_interrupt>
  1c:	15 c0       	rjmp	.+42     	; 0x48 <__bad_interrupt>

0000001e <__ctors_end>:
  1e:	11 24       	eor	r1, r1
  20:	1f be       	out	0x3f, r1	; 63
  22:	cf e5       	ldi	r28, 0x5F	; 95
  24:	d2 e0       	ldi	r29, 0x02	; 2
  26:	de bf       	out	0x3e, r29	; 62
  28:	cd bf       	out	0x3d, r28	; 61
  2a:	03 d0       	rcall	.+6      	; 0x32 <_etext>
  2c:	00 c0       	rjmp	.+0      	; 0x2e <_exit>

0000002e <_exit>:
  2e:	f8 94       	cli

00000030 <__stop_program>:
  30:	ff cf       	rjmp	.-2      	; 0x30 <__stop_program>

Disassembly of section .text:

00000048 <__bad_interrupt>:
  48:	db cf       	rjmp	.-74     	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.main:

00000032 <main>:
#include <xc.h>
//#include <avr/io.h>

int main(void)
{
	DDRB = 0x06;						// Set Port PB1 and PB2 as Output
  32:	86 e0       	ldi	r24, 0x06	; 6
  34:	87 bb       	out	0x17, r24	; 23

	TCCR0A = (1<<WGM00)|(1<<COM1A1)		// Set up the two Control registers of Timer1.
  36:	81 e2       	ldi	r24, 0x21	; 33
  38:	8a bd       	out	0x2a, r24	; 42
	|(1<<COM1B1);						// Wave Form Generation is Fast PWM 8 Bit,
	TCCR0B = (1<<WGM02)|(1<<CS02)		// OC1A and OC1B are cleared on compare match
  3a:	8d e0       	ldi	r24, 0x0D	; 13
  3c:	83 bf       	out	0x33, r24	; 51
	|(1<<CS00);							// and set at BOTTOM. Clock Prescaler is 1024.

	OCR0A = 63;                       // Dutycycle of OC0A = 25%
  3e:	8f e3       	ldi	r24, 0x3F	; 63
  40:	89 bd       	out	0x29, r24	; 41
	OCR0B = 127;                      // Dutycycle of OC0B = 50%
  42:	8f e7       	ldi	r24, 0x7F	; 127
  44:	88 bd       	out	0x28, r24	; 40
  46:	ff cf       	rjmp	.-2      	; 0x46 <__SREG__+0x7>
